#!/bin/bash
# Update_forks helper script
# Will return 1 or 0 which will be used if called from sync
#set -x

# Allow history command to be executed
HISTFILE=~/.bash_history
set -o history

LOCAL_MANIFEST=.repo/local_manifests/local_manifest.xml
REMOTE=bmc
ROOT=`pwd`

get_our_head() {
	git rev-parse HEAD
}

get_their_head() {
	git rev-parse aokp/kitkat
}

fixxor() {
	local FIXED=0
	echo "Merge failed. Please fix."
	read command
	case command in
		'git status') git status ;;
		'git commit -a') git commit -a ;;
		*) echo "Invalid selection - 'git status' or 'git commit -a'";;
	esac
	[[ verify_fixed ]] || FIXED=1
}

verify_fixed() {
	echo "Is merge fixed (y/n)?"
	read fixed
	case fixed in
		y|Y) continue ;;
		n|N) fixxor ;;
		*) echo "Invalid selection."
	esac
}


[ -e ${LOCAL_MANIFEST} ] || exit 0
grep ${REMOTE} ${LOCAL_MANIFEST} | cut -f2 -d '"' | sed 1d | while read line; do
	if [ $line != local_manifest ]; then
		echo cd $line
		cd $line
		# check if HEAD matches
		OUR_HEAD=${get_our_head}
		THEIR_HEAD=${get_their_head}
		if [ ${OUR_HEAD} != ${THEIR_HEAD} ]; then
			# We'll than we want better HEAD damnit
			git pull aokp kitkat >/dev/null 2>&1
			#Check HEAD to verify clean merge
			if [ ${OUR_HEAD} != ${get_our_head} ]; then
				# Merge was not clean; allow fixxor
				echo "Merge failed. Please fix."
				read command
				case command in
					'git status')
						git status
					;;
					'git commit -a')
						git commit -a
					;;
					*)
						echo "Invalid selection - 'git status' or 'git commit -a'"
					;;
			        esac
			fi
		fi
		cd $ROOT
	fi
done

# all merged; time to sync
exit 1
